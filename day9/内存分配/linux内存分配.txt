【3】linux内存分配		
	1.地址
		物理地址:在datasheet中能够查到的地址称之为
				 物理地址，实际设备的操作地址；
		虚拟地址、线性地址：在操作系统程序员能够操
				作的地址称之为虚拟地址；
		逻辑地址：将程序进行反汇编之后，其中能够看
				到的地址称之为逻辑地址；
		
	2.内存管理
		段式管理:x86架构，分段管理
		页式管理：arm架构，页式管理
		
	3.内存映射关系
		4g------------------------------------
	               判断错误码  4k
		 -----------------------------------
			       固定内存映射区 4m-4k(内核使用)
	     -----------------------------------
		           高端内存映射区 4m（alloc_page kmap）
		 ------------------------------------
					NULL 8K(保护)
		 ------------------------------------vmalloc  end
				 vmalloc内存区120m-8m-8k(低端或者高端内存)
		 ------------------------------------vmalloc  start
					vmalloc offset 8m
		 ------------------------------------
					物理内存映射区896M(kmalloc 
					get_free_page低端内存)
	   3g------------------------------------  物理内存 3g 偏移   4k + 3g
						用户空间
	   0g------------------------------------
		
	4.linux内存分配函数（slab）
		 void *kmalloc(size_t s, gfp_t gfp)
		功能：分配对应的虚拟内存
		参数：size:分配内存区的大小
			  flags：内存分配标志
			  GFP_KERNEL:内核可能被休眠，用于进程上下文中
			  GFP_ATOMIC：处理紧急的事务，用在中断上下文
			  
		返回值：对应虚拟地址
		特点：最大128k , 分配虚拟地址，其虚拟地址空间连续，
			  物理地址空间也是连续,分配的内存必须是2的次幂的形式
		类似函数：kzalloc：分配虚拟内存区并清零

		void kfree(const void *x)
		功能：释放对应的虚拟内存
		参数：x:虚拟内存的起始地址
		返回值：无
		
		void *vmalloc(unsigned long size)
		功能：分配对应的虚拟内存
		参数：size:分配内存区的大小
		返回值：对应虚拟地址
		特点：分配虚拟地址，其虚拟地址空间连续，
		但是物理地址空间不一定连续
		
		void vfree(const void *addr)
		功能：释放对应的虚拟内存
		参数：addr:虚拟内存区的首地址
		返回值：无
		
	
		 unsigned long __get_free_page(gfp_t gfp)
		功能：分配一个页的内存 4K
		void free_page(unsigned long addr)
		释放一个页的内存
		
		unsigned long __get_free_pages(gfp_t gfp_mask, get_order(57600))
		功能：分配多个页的内存
		57600-->2^n :第二个参数填写的是n
		n = get_order(57600)
		
		void free_pages(unsigned long addr, unsigned long order)
		释放多个页的内存
		
		
		
		
		
		
		
		
		
		
		
		
		